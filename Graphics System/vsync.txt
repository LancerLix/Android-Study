1.显示器总是按固定的周期从(前台)帧缓冲里面取数据显示，更新(前台)帧缓冲的时机有两种：(单后台缓冲Buffer情况)
一个是当前帧渲染完成显卡(显示服务)立即更新帧缓冲交换渲染完成的后台缓冲Buffer到前台Display)，立即拿到释放的后台缓冲Buffer开始下一帧渲染. --- 浪费渲染资源且会发生teardown.
一个是当前帧渲染完成显卡(显示服务)等待vsync后再更新帧缓冲.这种情况下当前帧渲染后台缓冲区写满，需要等待更新帧缓冲后才能拿到后台缓冲Buffer开始下一帧渲染.
(更多的后台缓冲Buffer可以有效缓解等待Buffer的问题，但会造成更多的画面滞后感 --- 可以有更多后台缓冲利用，但渲染和Display相差了更多的后台缓冲Buffer数据)

帧缓冲也叫FrameBuffer.


2.想要避免teardown的话，只有在vsync信号出现以后显卡再更新帧缓冲，避免在显示器扫描过程中突然更新缓冲区.


3.VSync一般依赖于缓冲技术(多缓冲---有后台缓冲Buffer，渲染到后台缓冲Buffer，Display使用前台Buffer，渲染和Display不共享Buffer)，否则(单缓冲情况---无后台缓冲Buffer，直接渲染到前台Buffer，渲染和Display共享Buffer)：
在系统的FPS低于显示器刷新频率的情况下，仍然会有teardown. --- 还没有渲染完显示器就刷新了
在系统的FPS高于显示器刷新频率的情况下，显卡会将一部分时间浪费在等待上，因为没有可用的内存用于绘制.


4.缓冲技术说白了就是渲染的缓冲，渲染结果保存在后台缓冲区，而不是直接渲染到Display使用的前台Buffer上.


5.Android为了给应用更加充分的渲染时间，再等待vsync更新帧缓冲拿到新帧后立即开始渲染.


6.FrameBuffer的数据是串行传输的


===============================================================================================================================================================================================================

HSYNC(HSW) --- HBP --- ENABLE --- HFP --- HSYNC(HSW) --- HBP ---
                  行数据                              

HSW:HSYNC有效电平跳变到无效电平开始，无效电平的持续时间(后面恢复成有效电平)
HBP:HSYNC无效电平跳变到有效电平开始，到ENABLE从无效电平跳变到有效电平，2者之间的间隔时间(后面开始输出有效数据信号)
HFP:ENABLE有效电平跳变到无效电平开始，到HSYNC从有效电平跳变到无效电平，2者之间的间隔时间

行有效数据：HSYNC和ENABLE都为有效电平的情况，ENABLE有效电平持续比HSYNC持续时间短，短的时间即为HBLANK，即HSYNC有效电平时间=HBP+ENABLE有效电平时间+HFP
HBLANK = (HFP + HSW + HBP) * CLOCK_TIME(像素时钟)，也可以认为是两个ENABLE有效电平的间隔时间(以时钟频率为单位).

ENABLE有时候也称为VDEN(垂直数据使能信号)


===============================================================================================================================================================================================================

VSYNC(VSPW) --- VBP --- ENABLE --- VFP --- VSYNC(VSPW) --- VBP ---
                  帧数据                              

VSYNC的无效电平和有效电平的持续时间通常是整数倍的HSYNC周期，即VSYNC的单位为HSYNC周期时间(而HSYNC的单位为PCLK周期时间)
VSPW:VSYNC有效电平跳变到无效电平开始，无效电平的持续时间(后面恢复成有效电平)
VBP:VSYNC无效电平跳变到有效电平开始，到第一个HSYNC的ENABLE从无效电平跳变到有效电平，2者之间的间隔时间(后面开始输出有效数据信号):单位为HSYNC
VFP:最后一个HSYNC的ENABLE有效电平跳变到无效电平开始，到VSYNC从有效电平跳变到无效电平，2者之间的间隔时间:单位为HSYNC

帧有效数据：VSYNC为有效电平且ENABLE为有效电平的HSYNC，ENABLE有效电平持续比VSYNC持续时间短，短的时间即为VBLANK，即VSYNC有效电平时间=VBP+ENABLE为有效电平的HSYNC时间+VFP
VBLANK = (VFP + VSPW + VBP) * HSYNC周期时间。也可以认为是两个ENABLE有效电平的间隔时间(以HSYNC周期为单位，包含了HBLANK).